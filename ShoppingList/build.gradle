apply plugin: 'com.android.application'

Properties local_properties = new Properties()
File localPropertiesFile = project.rootProject.file('private.properties')
if (localPropertiesFile.exists()) {
    local_properties.load(localPropertiesFile.newDataInputStream())
}

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        applicationId "org.openintents.shopping"
        versionName "2.0.3"
        versionCode 100203
        minSdkVersion 14
        targetSdkVersion 23

        testApplicationId "org.openintents.shopping.test"
    }

    lintOptions {
        abortOnError false
    }

    productFlavors {
        play {
            dependencies {
                compile "com.google.android.gms:play-services-wearable:$rootProject.ext.playServicesVersion"
                wearApp project(':ShoppingListWear')
            }
        }

        playInternet {
            buildConfigField "String", "KEY_POLLFISH", "\"" + (local_properties.key_pollfish ?: "") + "\""
            dependencies {
                compile "com.google.android.gms:play-services-wearable:$rootProject.ext.playServicesVersion"
                wearApp project(':ShoppingListWear')
            }
        }

        myo {
            minSdkVersion 16
        }

        tstore {

        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
            applicationVariants.all { variant ->
                variant.outputs.each { output ->
                    def file = output.outputFile
                    output.outputFile = new File(file.parent, file.name.replace(".apk", "-" + defaultConfig.versionName + ".apk"))
                }
            }
        }
    }

    def propertyFile = new File(projectDir, "build-private.properties")
    if (propertyFile.exists()) {
        signingConfigs {
            release {
                Properties props = new Properties()
                props.load(new FileInputStream(propertyFile))

                storeFile file(props.getProperty("key.store"))
                storePassword props.getProperty("key.store.password")
                keyAlias props.getProperty("key.alias")
                keyPassword props.getProperty("key.alias.password")
            }
        }
        buildTypes.release.signingConfig signingConfigs.release
        println "Release apks will be signed!"
    } else {
        println "For signed release apks you need to create a build-private.properties file"
    }

}


dependencies {

    repositories {
        maven {
            url '../myorepository'
        }
    }

    compile project(':ShoppingListLibrary')
    compile 'com.github.openintents:distribution:1.1.3'
    compile "com.android.support:appcompat-v7:$rootProject.ext.supportVersion"
    compile "com.android.support:design:$rootProject.ext.supportVersion"
    compile files('libs/OIShoppingListMyBackupPro.jar')
    androidTestCompile 'junit:junit:4.12'
    androidTestCompile 'com.android.support.test:runner:0.5'
    androidTestCompile 'com.android.support.test:rules:0.5'
    androidTestCompile 'com.android.support.test.espresso:espresso-core:2.2.2'
    androidTestCompile 'com.android.support.test.espresso:espresso-contrib:2.2.2'
    androidTestCompile "com.android.support:support-annotations:$rootProject.ext.supportVersion"

    playInternetCompile files('libs/pollfish.jar')
    myoCompile('com.thalmic:myosdk:0.6.+@aar')
}
